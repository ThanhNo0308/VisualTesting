json
{
  "ministry_of_education": "BỘ GIÁO DỤC VÀ ĐÀO TẠO",
  "university": "TRƯỜNG ĐẠI HỌC MỞ THÀNH PHỐ HỒ CHÍ MINH",
  "author": "NGUYỄN THANH NỞ",
  "project_title_placeholder": "<TÊN ĐỒ ÁN NGÀNH>",
  "document_type": "ĐỒ ÁN NGÀNH",
  "major": "NGÀNH CÔNG NGHỆ THÔNG TIN",
  "location_and_year": "TP. HỒ CHÍ MINH, 2025",
  "student_id": "2251050056",
  "supervisor": "TS. Trương Hoàng Vinh",
  "acknowledgement_title": "LỜI CẢM ƠN",
  "acknowledgement_text": "Trong thời gian làm đồ án ngành, em đã nhận được những sự giúp đỡ, đóng góp ý kiến và chỉ bảo nhiệt tình của thầy cô, gia đình, bạn bè. Em xin phép được gửi sự tri ân sâu sắc và lời cảm ơn chân thành nhất đối với các thầy cô của khoa Công nghệ thông tin đã truyền đạt những tri thức quý báu cho em trong suốt quá trình học tập tại trường Đại học Mở Thành phố Hồ Chí Minh. Đặc biệt, em xin trân trọng cảm ơn thầy Trương Hoàng Vinh đã nhiệt tình hướng dẫn để em có thể hoàn thành tốt bài báo cáo đồ án ngành này. Em xin kính chúc sức khỏe đến tất cả quý thầy cô đang công tác tại trường Đại học Mở Thành phố Hồ Chí Minh và sự nghiệp giảng dạy sẽ ngày càng thành công hơn, gặt hái được nhiều thành quả tốt. Chúc trường sẽ luôn là nền tảng vững chắc cho nhiều thế hệ sinh viên trên con đường học tập. Có thể đồ án ngành hoặc bài báo cáo của em sẽ có những chỗ thiếu sót, chưa làm hài lòng được thầy cô nhưng em mong sẽ nhận được sự cảm thông của thầy cô. Em sẽ cố gắng rút kinh nghiệm sau khi nhận được những lời nhận xét của thầy cô và cố gắng hơn nữa trên con đường học tập của mình cũng như con đường để em bước gần hơn với sự nghiệp tương lai phía trước. Em xin chân thành cảm ơn!",
  "page_number_1": 1,
  "supervisor_review_title": "NHẬN XÉT CỦA GIÁO VIÊN HƯỚNG DẪN",
  "page_number_2": 2,
  "abstract_title": "TÓM TẮT ĐỒ ÁN NGÀNH",
  "page_number_3": 3
}

json
{
  "list_of_tables_title": "DANH MỤC BẢNG",
  "table_1_1_entry": "Bảng 1.1: Tên bảng 1................................................... Error! Bookmark not defined.",
  "table_2_1_entry": "Bảng 2.1: Tên bảng 1................................................... Error! Bookmark not defined.",
  "page_number_9": 9,
  "introduction_title": "MỞ ĐẦU",
  "page_number_10": 10,
  "chapter_1_title": "Chương 1. TỔNG QUAN ĐỀ TÀI",
  "section_1_1_title": "Giới thiệu đề tài",
  "section_1_1_content": "Trong bối cảnh hiện nay, các hệ thống quảng cáo được triển khai đồng bộ trên website của nhiều chi nhánh hoặc cửa hàng. Quảng cáo này có thể ở nhiều dạng như tĩnh (hình ảnh), động (video), âm thanh (audio)... nhưng việc có tuân thủ quảng cáo gốc hay không lại là một vấn đề rất lớn. Thực tế, những sự sai lệch nhỏ như thêm bớt nội dung, chỉnh sửa màu, thay đổi chữ, di chuyển biểu tượng, cắt bỏ hoặc thay đổi lớn có thể làm sai đi thông điệp vốn có của quảng cáo. Cách để giải quyết vấn đề này là phải đi từng website của các chi nhánh để kiểm tra, quá trình kiểm tra thủ công này rất tốn thời gian, dễ bỏ sót những thay đổi nhỏ nhưng quan trọng (ví dụ thông tin giá, khuyến mãi...). Lâu dài có thể gây ảnh hưởng nghiêm trọng đến uy tín thương hiệu cũng như độ tin cậy của khách hàng. Sau khi nhận thấy nguy cơ tiềm ẩn của vấn đề, em quyết định tiến hành nghiên cứu và triển khai hệ thống kiểm thử giao diện tự động cho quảng cáo trực tuyến. Hệ thống này có thể tự động thu thập những hình ảnh quảng cáo được chèn trực tiếp trên website sau đó so sánh với quảng cáo gốc dựa trên vị trí HTML đã được thống nhất. Qua đó, giúp phát hiện nhanh chóng các vi phạm trong việc triển khai quảng cáo tại từng chi nhánh, đảm bảo tính đồng bộ, chính xác và uy tín cho doanh nghiệp.",
  "section_1_2_title": "Lý do chọn đề tài",
  "section_1_2_content": "Trong hoạt động quảng cáo, việc triển khai đồng bộ và chính xác nội dung quảng cáo từ nhà cung cấp đến các chi nhánh là yếu tố then chốt để đảm bảo tính thống nhất của thương hiệu. Nhưng thực tế, yếu tố trên không dễ dàng thực hiện, nếu chỉ có vài chi nhánh sử dụng hình ảnh quảng cáo thì có thể đảm bảo nhưng nếu có đến vài trăm thậm chí là vài nghìn chi nhánh sử dụng quảng cáo và đâu đó trong những chi nhánh này không tuân thủ quảng cáo ban đầu thì việc kiểm tra thủ công của từng chi nhánh rất tốn chi phí, thời gian, nhân lực... Để giải quyết vấn đề này trong phạm vi đồ án, em tập trung nghiên cứu và xây dựng hệ thống kiểm thử giao diện quảng cáo tự động với các chức năng như tự động thu thập hình ảnh quảng cáo được chèn trực tiếp trên website chi nhánh. Người dùng chỉ cần cung cấp hình ảnh quảng cáo gốc, đường dẫn website và vị trí thẻ HTML (đã được thống nhất giữa nhà cung cấp và chi nhánh). Hệ thống sẽ tiến hành so sánh hình ảnh quảng cáo hiển thị thực tế với ảnh gốc, từ đó phát hiện các trường hợp sai lệch hoặc vi phạm nguyên tắc ban đầu.",
  "page_number_11": 11,
  "section_1_3_title": "Mục tiêu đề tài",
  "section_1_3_content": "Mục tiêu đề tài là nghiêm cứu và xây dựng một hệ thống kiểm thử giao diện quảng cáo tự động, cho phép phát hiện và phân loại mức độ sai lệch giữa quảng cáo gốc và quảng cáo được triển khai trên các website chi nhánh. Thay vì phải phụ thuộc vào phương pháp kiểm tra thủ công vốn tốn nhiều thời gian, chi phí và dễ bỏ sót chi tiết, hệ thống hướng tới việc tự động hóa toàn bộ quy trình kiểm tra, từ khâu thu thập dữ liệu đến phân tích, đối chiếu và báo cáo kết quả.",
  "section_1_4_title": "Phương pháp thực hiện",
  "section_1_4_deviation_labels": "Trải qua quá trình phát triển mô hình, em quyết định đưa mô hình đến 3 nhãn để phân loại sai lệch: giống (similar), sai lệch nhẹ chấp nhận được (almost), sai lệch cần cảnh báo (different).",
  "section_1_4_languages_and_libraries": "Ngôn ngữ và thư viện: Python, OpenCV (xử lý ảnh, Canny, ORB, histogram), cikit-learn (SVM, RandomForest, kNN, GroupKFold), XGBoost, Tesseract OCR (trích xuất văn bản), Numpy / Pandas / Seaborn (phân tích)",
  "section_1_4_model_stages_title": "Các giai đoạn tiến hóa mô hình:",
  "section_1_4_stage_1_description": "Giai đoạn 1: SSIM, Histogram và Layout với nhãn 2 lớp (similar/different).",
  "section_1_4_stage_2_description": "Giai đoạn 2: Thêm OCR (tỷ lệ tương đồng từ khóa) đồng thời tích hợp ORB để xử lý các thay đổi bố cục nhỏ như icon, nút hay chi tiết đồ họa cục bộ, mở rộng thành nhãn 3 lớp (similar/almost/different) để tách sai lệch nhẹ. tạo vector đặc trưng đầy đủ (SSIM, OCR, Histogram, ORB, Layout).",
  "section_1_4_stage_3_description": "Giai đoạn 3: Tiến hành so sánh đa thuật toán (SVM, RF, kNN, XGBoost) với mục đích chọn phương án cân bằng hiệu năng, ổn định.",
  "section_1_4_stage_4_description": "Giai đoạn 4: Triển khai mô hình đã chọn vào hệ thống.",
  "page_number_12": 12,
  "section_1_5_title": "Bố cục đề tài",
  "section_1_5_report_structure_summary": "Báo cáo có 4 chương",
  "section_1_5_chapter_1_summary": "Chương 1. Tổng quan đề tài: -> mục tiêu chương",
  "section_1_5_chapter_2_summary": "Chương 2. Cơ sở lý thuyết: -> mục tiêu chương",
  "section_1_5_ellipsis_1": "...",
  "section_1_5_ellipsis_2": "...",
  "page_number_13": 13
}

json
{
  "chapter_2_title": "CƠ SỞ LÝ THUYẾT",
  "section_2_1_title": "Tổng quan bài toán kiểm thử giao diện tự động",
  "section_2_1_paragraph_1": "Bài toán đặt ra là trong lĩnh vực quảng cáo trực tuyến, tính đồng bộ và nhất quán của nội dung giữa mẫu gốc và các phiên bản triển khai tại chi nhánh đóng vai trò rất quan trọng trong việc duy trì uy tín thương hiệu. Tuy nhiên, trong thực tế, quá trình triển khai thường phát sinh nhiều sai lệch. Những sai lệch này có thể biểu hiện ở nhiều mức độ khác nhau như thay đổi nội dung chữ, chỉnh sửa hoặc dịch chuyển biểu tượng, biến đổi bố cục trình bày, điều chỉnh tông màu hiển thị hoặc thậm chí thay thế hoàn toàn hình ảnh và thông tin khuyến mãi. Các sai lệch nhỏ đòi hỏi rất khó nhận biết bằng mắt thường, nhưng lại có khả năng làm sai lệch thông điệp ban đầu mà doanh nghiệp muốn truyền tải đến khách hàng.",
  "section_2_1_paragraph_2": "Việc phát hiện và phân loại sai lệch theo phương pháp thủ công là một nhiệm vụ phức tạp và tốn kém. Khi số lượng chi nhánh và quảng cáo cần kiểm tra ngày càng nhiều, việc con người phải đi từng website để so sánh với mẫu gốc sẽ dẫn đến lãng phí thời gian, tăng chi phí nhân sự và tiềm ẩn nguy cơ bỏ sót những thay đổi quan trọng. Chính vì vậy, nhu cầu đặt ra là cần một giải pháp tự động, có khả năng thay thế hoặc hỗ trợ quá trình kiểm tra giao diện, từ đó giúp doanh nghiệp kiểm soát được tính tuân thủ quảng cáo ở quy mô lớn.",
  "section_2_1_paragraph_3": "Bài toán kiểm thử giao diện tự động trong bối cảnh này có thể được khái quát như sau: hệ thống nhận vào hình ảnh mẫu gốc do nhà cung cấp phát hành và hình ảnh quảng cáo được hiển thị thực tế tại một chi nhánh, sau đó tiến hành so sánh để đánh giá mức độ khác biệt. Kết quả đầu ra là phân phân loại thể hiện mức độ sai lệch, có thể chia thành ba mức: similar (giống hoặc đúng chuẩn), almost (có sai lệch nhẹ nhưng chấp nhận được) và different (khác biệt rõ rệt, vi phạm nguyên tắc triển khai).",
  "section_2_1_paragraph_4": "Khó khăn lớn nhất của bài toán này nằm ở chỗ không chỉ dừng lại ở so sánh pixel thuần túy mà còn cần đạt được mức hiểu ngữ nghĩa. Ví dụ, nếu văn bản trên quảng cáo bị thay đổi một từ, việc so sánh màu sắc hoặc cấu trúc hình ảnh thông thường sẽ không đủ, mà cần đến kỹ thuật nhận dạng ký tự quang học (OCR). Tương tự, khi một biểu tượng nhỏ bị dịch chuyển hoặc thay đổi vị trí, chỉ số so sánh toàn cục như SSIM hay histogram chưa chắc đã phát hiện được, mà cần đến phương pháp so khớp đặc trưng cục bộ như ORB. Bên cạnh đó, những thay đổi về tông màu hoặc cách bố trí khung quảng cáo cũng cần được phân tích bằng các đặc trưng riêng như histogram hoặc layout.",
  "page_number_14": 14,
  "section_2_1_paragraph_5": "Với những thách thức đó, một hướng tiếp cận hiệu quả là kết hợp nhiều đặc trưng khác nhau, bao gồm SSIM, histogram, OCR, ORB và layout, để nắm bắt được cả thay đổi toàn cục và cục bộ trong hình ảnh. Các đặc trưng này sau đó được đưa vào mô hình học máy giám sát để huấn luyện và phân loại mức độ sai lệch. Đây là cách tiếp cận thuộc nhóm Visual Compliance Testing, tức là kiểm tra tính tuân thủ trực quan của giao diện, và thường áp dụng các mô hình học máy cổ điển như SVM, Random Forest, k-NN hoặc XGBoost nhằm đảm bảo cân bằng giữa độ chính xác, tính ổn định và khả năng giải thích kết quả.",
  "section_2_2_title": "Kiểm thử giao diện: khái niệm và phân loại",
  "section_2_2_1_title": "Khái niệm chung",
  "section_2_2_1_paragraph_1": "Kiểm thử giao diện người dùng là quá trình kiểm tra tính đúng đắn, nhất quán và khả năng sử dụng của giao diện phần mềm hoặc ứng dụng. Kiểm thử giao diện không chỉ dừng lại ở việc đảm bảo các nút bấm, form nhập liệu hoạt động mà còn bao gồm các khía cạnh trực quan, bố cục, màu sắc và nội dung.",
  "section_2_2_2_title": "Phân loại",
  "section_2_2_2_paragraph_1": "Kiểm thử giao diện thủ công tức là con người trực tiếp quan sát và so sánh giao diện với bản thiết kế hoặc yêu cầu ban đầu. Với ưu điểm linh hoạt, phát hiện được lỗi trải nghiệm nhưng nhược điểm tốn nhiều thời gian, chi phí và dễ bỏ sót.",
  "section_2_2_2_paragraph_2": "Kiểm thử giao diện tự động tức là sử dụng công cụ hoặc thuật toán để so sánh giao diện với mẫu gốc. Có thể tiếp cận theo hướng kiểm thử chức năng giao diện và kiểm thử giao diện trực quan. Việc kiểm thử chức năng giao diện tập trung vào việc xác minh chức năng như click button, nhập dữ liệu, chuyển trang... còn kiểm thử giao diện trực quan tập trung vào so sánh giao diện hiển thị (pixel, màu sắc, bố cục văn bản...) nhằm phát hiện sai lệch về hình ảnh, nội dung, bố cục.",
  "page_number_15": 15,
  "section_2_3_title": "Các đặc trưng xử lý ảnh",
  "section_2_3_1_title": "SSIM (Structural Similarity Index Measurement)",
  "section_2_3_1_1_title": "Giới thiệu SSIM",
  "section_2_3_1_1_paragraph_1": "Đặc trưng SSIM phản ánh mức tương đồng cấu trúc sáng và tương phản giữa hai ảnh, thay thế so sánh pixel thô vốn nhạy với dịch chuyển nhỏ hoặc nhiễu. Nó giúp ghi nhận chênh lệch lớn về bố cục tổng thể, cắt xén vùng lớn hay thay đổi nền rõ rệt mà vẫn giữ chi phí tính toán thấp. Lý do sử dụng vì nhanh, ổn định và phù hợp vai trò trục “nền” để các đặc trưng khác bổ sung phần thông tin bị bỏ sót như màu, chữ hay điểm cục bộ. SSIM được sử dụng vì tốc độ thực thi nhanh, cảm nhận thị giác gần giống với mắt thường khi chúng ta nhìn và so sánh hình ảnh.",
  "section_2_3_1_2_title": "Triển khai SSIM",
  "figure_2_1_caption": "Hình 2-1. Pipeline tính toán SSIM từ ảnh đầu vào",
  "section_2_3_1_2_paragraph_1": "Trong quá trình triển khai, hai ảnh đầu vào trước tiên được chuyển sang dạng grayscale nhằm giảm bớt kênh màu và tập trung vào cấu trúc thị giác chính. Sau đó, ảnh được kiểm tra kích thước: nếu tổng số điểm ảnh vượt quá 700.000 thì hệ thống sẽ tự động thu nhỏ theo tỉ lệ nhằm đảm bảo cân bằng giữa việc giữ chi tiết quan trọng và giảm chi phí tính toán. Tiếp theo, bộ lọc median blur được áp dụng để triệt tiêu nhiễu muối tiêu nhưng vẫn giữ được biên và cấu trúc lớn, tránh làm mờ các yếu tố cần so sánh. Sau bước tiền xử lý, chỉ số SSIM (Structural Similarity Index) được tính toán giữa hai ảnh grayscale, với giá trị dao động trong khoảng từ gần 0 đến 1, trong đó giá trị càng cao biểu thị mức độ tương đồng càng lớn. Giá trị SSIM này được đưa trực tiếp vào vector đặc trưng mà không cần chuẩn hóa bổ sung do bản chất phân bố đã hẹp. Đặc biệt, trong trường hợp xảy ra ngoại lệ như ảnh lỗi hoặc không đọc được dữ liệu, hệ thống sẽ gán giá trị trung bình là 0.5. Việc chọn ngưỡng này nhằm tránh phá vỡ cân bằng dữ liệu huấn luyện, đồng thời giữ kết quả ở mức “không thiên lệch” giữa hai trạng thái giống và khác.",
  "page_number_16": 16,
  "section_2_3_2_title": "OCR (Optical Character Recognition)",
  "section_2_3_2_1_title": "Giới thiệu OCR",
  "section_2_3_2_1_paragraph_1": "Thành phần OCR nắm thông tin nội dung chữ và là lớp rủi ro nghiệp vụ (giá, khuyến mãi) mà các phép đo thuần thị giác thường bỏ sót vì hình dạng tổng thể không đổi. Trong nhiều trường hợp banner bị sửa con số hoặc thay cụm chữ ngắn nhưng nền và icon giữ nguyên, SSIM, Histogram và Layout đều cao, bổ sung điểm tương đồng văn bản làm giảm false negative với vi phạm nội dung.",
  "section_2_3_2_2_title": "Triển khai OCR",
  "figure_2_2_caption": "Hình 2-2. Pipeline nhận diện và so sánh văn bản bằng OCR từ ảnh đầu vào",
  "section_2_3_2_2_paragraph_1": "Trong quá trình triển khai, sử dụng thư viện Tesseract để nhận diện chữ sau khi ảnh được xử lý bằng adaptive threshold nhằm tăng độ tương phản. Văn bản được chuẩn hóa (loại bỏ ký tự đặc biệt, chuyển thành chữ thường) rồi tách thành tập hợp từ khóa. Từ đó, mức độ tương đồng giữa hai giao diện được tính bằng Jaccard Index, thông qua tỷ lệ giữa số lượng từ chung và tổng số từ của cả hai ảnh. Cách tiếp cận này có ưu điểm là tập trung vào nội dung hiển thị (textual content) thay vì toàn bộ pixel, do đó đặc biệt hiệu quả trong các trường hợp lỗi liên quan đến thay đổi chữ, font hoặc nội dung hiển thị. Tuy nhiên, kỹ thuật này cũng có hạn chế là chất lượng ảnh chụp màn hình, font chữ phức tạp hoặc ngôn ngữ đặc thù có thể làm giảm độ chính xác của OCR.",
  "page_number_17": 17,
  "section_2_3_3_title": "Layout",
  "section_2_3_3_1_title": "Giới thiệu Layout",
  "section_2_3_3_1_paragraph_1": "Đặc trưng Layout tập trung vào hình dạng tổng thể và vị trí khối nội dung. Khi một banner bị cắt bớt, chèn thêm panel, dịch chuyển cụm chữ lớn hoặc đảo bố cục, sự trùng khớp biên giảm mạnh dù màu hoặc văn bản còn giống. Nó giúp tách những thay đổi cấu trúc khỏi thay đổi nhỏ về màu hay ký tự, giảm phụ thuộc đơn thuần vào SSIM vốn có thể giữ cao khi dịch chuyển nhẹ kèm nền đồng đều.",
  "section_2_3_3_2_title": "Triển khai Layout",
  "figure_2_3_caption": "Hình 2-3. Pipeline so sánh bố cục bằng IoU",
  "section_2_3_3_2_paragraph_1": "Trong kỹ thuật so sánh bố cục (layout), hai ảnh sau khi được tiền xử lý (chuyển sang grayscale và đảm bảo cùng kích thước) sẽ được trích xuất biên bằng thuật toán Canny với ngưỡng 50–150. Kết quả thu được là các mặt nạ nhị phân thể hiện đường viền trong từng ảnh. Tiếp đó, hệ thống tính toán giao (intersection) và hợp (union) giữa hai mặt nạ để xác định chỉ số IoU (Intersection over Union) phản ánh mức độ trùng khớp của cấu trúc. Nếu hợp bằng 0 (trường hợp hiếm gặp khi ảnh hầu như trắng hoàn toàn), hệ thống trả về 1.0 để tránh lỗi chia cho 0.",
  "page_number_18": 18
}

json
{
  "page_19_paragraph_1": "Giá trị IoU càng thấp cho thấy sự thay đổi bố cục càng lớn. Đặc trưng này không cần chuẩn hóa bổ sung và được đưa trực tiếp vào vector đặc trưng. Ngoài ra, do văn bản hoặc chi tiết nhỏ có thể tạo ra biên giả, việc áp dụng median blur trước Canny giúp giảm nhiễu và làm kết quả ổn định hơn.",
  "page_19_section_2_3_4_header": "2.3.4. Histogram",
  "page_19_section_2_3_4_1_header": "2.3.4.1. Giới thiệu Histogram",
  "page_19_section_2_3_4_1_paragraph_1": "Histogram màu biểu diễn phân bố cường độ của từng kênh RGB, giúp phát hiện thay đổi bảng màu nền, pha tổng hoặc can thiệp chỉnh màu tổng thể khi cấu trúc hình học vẫn gần như giữ nguyên (khi đó SSIM còn cao). Việc thêm đặc trưng này giảm rủi ro bỏ sót trường hợp chỉnh tông thương hiệu, đảo màu hoặc thay background phẳng. Nó đóng vai trò mở rộng chiều “ngữ cảnh thị giác toàn cục” mà edge hay keypoint không thể hiện.",
  "page_19_section_2_3_4_2_header": "2.3.4.2. Triển khai Histogram",
  "page_19_image_2_4_caption": "Hình 2-4. Pipeline tính toán Histogram từ ảnh màu",
  "page_19_image_2_4_description": "Ảnh được đọc ở dạng màu gốc (không chuyển về grayscale). Với mỗi kênh R, G, B, hệ thống tính histogram 32 bins và chuẩn hóa theo chuẩn L1 để loại bỏ ảnh hưởng tuyệt đối của độ sáng. Sau đó, mức độ tương đồng giữa hai histogram được đo bằng hệ số tương quan (CORREL) và được ánh xạ từ [-1,1][-1, 1][-1,1] về [0,1][0, 1][0,1] thông qua công thức (corr+1)/2(corr+1)/2(corr+1)/2. Giá trị cuối cùng là trung bình cộng của ba kênh màu. Trường hợp không đọc được ảnh, hệ thống trả về giá trị mặc định 0.5. Phương pháp này không sử dụng chia ô không gian (spatial bins) để giữ tính đơn giản, bởi đặc trưng về cấu trúc đã được đảm nhiệm bởi SSIM và Layout.",
  "page_19_page_number": 19,
  "page_20_section_2_3_5_header": "2.3.5. ORB (Oriented FAST and Rotated BRIEF)",
  "page_20_section_2_3_5_1_header": "2.3.5.1. Giới thiệu ORB",
  "page_20_section_2_3_5_1_paragraph_1": "Đặc trưng ORB bắt thay đổi cục bộ tinh vi như thêm hoặc xóa icon nhỏ, dịch chuyển logo, chỉnh nút CTA, thay mảng chi tiết nhỏ mà histogram và SSIM không nhạy. Khi phần lớn ảnh giữ nguyên nhưng một đối tượng thương hiệu bị thay, số và chất lượng cặp điểm đặc trưng trùng khớp sẽ giảm rõ, giúp mô hình đẩy mẫu vào almost hoặc different đúng mức.",
  "page_20_section_2_3_5_2_header": "2.3.5.2. Triển khai ORB",
  "page_20_image_2_5_caption": "Hình 2-5. Pipeline tính toán ORB từ ảnh đầu vào",
  "page_20_image_2_5_description": "Trong kỹ thuật so sánh dựa trên đặc trưng ORB, hai ảnh sau khi được tiền xử lý sang dạng grayscale sẽ được đưa vào bộ phát hiện ORB (với tham số nfeatures = 150) để xác định các điểm đặc trưng và trích xuất descriptor nhị phân. Tiếp đó, hệ thống sử dụng BFMatcher với khoảng cách Hamming để so khớp descriptor, đồng thời áp dụng phương pháp KNN (k = 2) kết hợp tiêu chuẩn Lowe’s ratio (0.75) nhằm loại bỏ những cặp khớp kém tin cậy. Từ các cặp khớp tốt, hai chỉ số được tính toán: tỷ lệ phủ (ratio) – thể hiện mức độ tương ứng giữa số match tốt và số lượng keypoint tối thiểu của hai ảnh, và chất lượng khớp (quality) – được tính dựa trên khoảng cách trung bình giữa các match, quy đổi về thang điểm [0,1]. Điểm ORB cuối cùng được xác định bằng trung bình cộng có trọng số đều giữa ratio và quality, đồng thời được kẹp trong khoảng [0,1]. Trong trường hợp không có descriptor hoặc không tìm thấy match hợp lệ, hệ thống sẽ trả về giá trị trung lập 0.5. Việc lựa chọn số lượng đặc trưng vừa phải (150) giúp cân bằng giữa tốc độ xử lý và độ nhạy, đồng thời tránh việc trích xuất dư thừa ở các vùng phẳng vốn ít thông tin.",
  "page_20_page_number": 20,
  "page_21_section_2_4_header": "2.4. Các thuật toán học máy áp dụng trong phân loại giao diện",
  "page_21_section_2_4_1_header": "2.4.1. Thuật toán SVM (Support Vector Machine)",
  "page_21_section_2_4_1_1_header": "2.4.1.1. Giới thiệu SVM",
  "page_21_section_2_4_1_1_paragraph_1": "SVM được chọn làm trụ cột giai đoạn đầu vì phù hợp không gian đặc trưng chiều thấp (5 đặc trưng) và khả năng tạo ranh giới quyết định rõ ràng giữa các mức sai lệch. Kernel linear là lựa chọn nhất quán tốt nhất trong toàn bộ quá trình phát triển và lý do em chọn thuật toán này ngay từ ban đầu bởi vì lý do ít cần nhiễu siêu tham số, dễ phát hiện overfitting qua biên thiên giữa các fold, ổn định trên dữ liệu không quá lớn.",
  "page_21_section_2_4_1_2_header": "2.4.1.2. Triển khai SVM",
  "page_21_image_2_6_caption": "Hình 2-6. Pipeline so sánh ảnh đa tính năng với SVM",
  "page_21_image_2_6_description": "Trong triển khai SVM, mô hình được huấn luyện trên vector đặc trưng 5 chiều gồm SSIM, OCR, Histogram, Layout và ORB. Do các đặc trưng này khác nhau về thang đo và mức độ phân tán, bước chuẩn hóa bằng StandardScaler là cần thiết để tránh việc một đặc trưng chi phối toàn bộ quá trình học. Ở giai đoạn baseline, kernel tuyến tính được sử dụng nhằm kiểm tra khả năng phân tách đơn giản của dữ liệu, nhưng khi xuất hiện các đặc trưng phi tuyến như OCR hoặc ORB thì ranh giới tuyến tính không đủ mạnh, vì vậy kernel RBF được lựa chọn để mô hình hóa ranh giới phức tạp hơn. Trong đó, tham số C điều chỉnh mức phạt với các điểm phân loại sai, C lớn giúp tăng độ chính xác trên tập huấn luyện nhưng dễ dẫn đến overfitting, còn C nhỏ tạo biên mềm hơn, khái quát tốt hơn. Tham số gamma xác định phạm vi ảnh hưởng của một điểm dữ liệu, gamma cao làm ranh giới tập trung chặt quanh các điểm nhưng dễ quá",
  "page_21_page_number": 21,
  "page_22_paragraph_1": "khớp, trong khi gamma thấp tạo ranh giới mượt mà hơn nhưng có thể bỏ qua chi tiết. Quá trình tuning được thực hiện với GridSearchCV để tìm tổ hợp tối ưu giữa C, gamma và kernel, đồng thời GroupKFold được dùng để đảm bảo dữ liệu cùng gốc (original_x) không bị chia cắt giữa tập huấn luyện và kiểm tra, hạn chế rò rỉ dữ liệu. Kết quả được đánh giá bằng ma trận nhầm lẫn gộp, trong đó lớp almost thường có xu hướng bị nhầm sang similar do ranh giới chưa rõ ràng; trong trường hợp này có thể điều chỉnh tham số C hoặc mở rộng thêm đặc trưng để cải thiện khả năng phân tách.",
  "page_22_section_2_4_2_header": "2.4.2. Thuật toán RF (Random Forest)",
  "page_22_section_2_4_2_1_header": "2.4.2.1. Giới thiệu RF",
  "page_22_section_2_4_2_1_paragraph_1": "Random Forest được đưa vào như một đối trọng dạng “tập hợp cây” để kiểm chứng mức ổn định và để đọc độ quan trọng đặc trưng. Việc nhiều cây trên các bootstrap khác nhau giảm nguy cơ lệ thuộc vào nhiễu cục bộ của một đặc trưng (ví dụ OCR dao động khi chữ mờ). Nó bổ sung góc nhìn khác nhau và cho thấy nếu một đặc trưng kỳ vọng quan trọng nhưng weight thấp, đó là tín hiệu cần xem lại cách tính.",
  "page_22_section_2_4_2_2_header": "2.4.2.2. Triển khai RF",
  "page_22_image_2_7_caption": "Hình 2-7. Pipeline so sánh ảnh đa tính năng với RF",
  "page_22_image_2_7_description": "Mô hình Random Forest được xây dựng dựa trên 5 đặc trưng đầu vào: SSIM (so sánh cấu trúc), OCR Jaccard (từ khóa văn bản), Histogram (tương quan màu đã chuẩn hóa L1), ORB (tỷ lệ và chất lượng match đặc trưng cục bộ) và Layout (IoU đường biên Canny).",
  "page_22_page_number": 22,
  "page_23_paragraph_1": "Trong cấu hình, tham số n_estimators quy định số lượng cây trong rừng, càng nhiều cây thì mô hình càng ổn định nhưng chi phí tính toán cũng tăng. max_depth kiểm soát độ sâu tối đa của mỗi cây, giúp tránh việc cây học quá chi tiết (overfitting). max_features xác định số đặc trưng được xem xét tại mỗi lần chia, với lựa chọn ‘sqrt’ thường giúp tăng tính ngẫu nhiên và giảm tương quan giữa các cây. min_samples_split và min_samples_leaf lần lượt đặt ngưỡng tối thiểu số mẫu để một node có thể được chia tiếp hoặc để tồn tại như một lá, các tham số này đảm bảo cây không bị chia quá vụn, từ đó tăng tính tổng quát. Tham số random_state đảm bảo tính tái lập kết quả.",
  "page_23_paragraph_2": "Do bản chất RF tách dữ liệu bằng ngưỡng tại từng node, mô hình này không yêu cầu chuẩn hóa dữ liệu đầu vào. Quá trình đánh giá sử dụng GroupKFold theo nhóm original_x để tránh rò rỉ thông tin, kết hợp với ma trận nhầm lẫn gộp để quan sát xu hướng phân loại nhầm giữa các lớp. Ngoài ra, các tham số được tinh chỉnh qua GridSearchCV, và sau khi chọn được cấu hình tốt nhất, mô hình được huấn luyện lại trên toàn bộ dữ liệu.",
  "page_23_section_2_4_3_header": "2.4.3. Thuật toán KNN (k-Nearest Neighbors)",
  "page_23_section_2_4_3_1_header": "2.4.3.1. Giới thiệu KNN",
  "page_23_section_2_4_3_1_paragraph_1": "KNN đóng vai trò baseline phi tham số nhằm kiểm tra “tính phân tách tự nhiên” của không gian đặc trưng. Nếu không gian đủ rõ ràng, KNN với k nhỏ sẽ đạt kết quả gần các mô hình tinh vi hơn, qua đó xác nhận chiến lược thiết kế đặc trưng đúng hướng. Ưu điểm của KNN là không giả định hình dạng ranh giới, nhược điểm là suy luận chậm khi dữ liệu lớn và rất nhạy với tỷ lệ thang đo giữa các chiều.",
  "page_23_page_number": 23
}

json
{
  "page_29_content_1": "Layout IoU: trích biên bằng Canny Edge, sau đó tính giao/union giữa hai mask nhị phân; giúp phát hiện thay đổi trong bố cục.",
  "page_29_heading_1": "3.2.4. Thuật toán và lý do lựa chọn",
  "page_29_content_2": "Các mô hình học máy được thử nghiệm trên tập dữ liệu với đặc trưng đầu vào gồm 5 chiều:",
  "page_29_content_3": "SVM (Support Vector Machine): SVM được lựa chọn vì khả năng phân tách dữ liệu hiệu quả trong không gian đặc trưng thấp chiều. Với kernel RBF, mô hình có thể xử lý quan hệ phi tuyến phức tạp giữa các đặc trưng như OCR hay ORB, trong khi kernel tuyến tính đóng vai trò baseline. Tham số C điều chỉnh độ cứng của biên, còn gamma quyết định phạm vi ảnh hưởng của điểm dữ liệu. Mô hình yêu cầu chuẩn hóa dữ liệu bằng StandardScaler để các đặc trưng không chỉ phối lẫn nhau. Nhược điểm là chi phí tính toán cao khi dữ liệu lớn và khó giải thích trực quan.",
  "page_29_content_4": "k-Nearest Neighbors (kNN): kNN được chọn như một thuật toán đơn giản, trực quan để kiểm tra mức độ tách lớp tự nhiên của vector đặc trưng. Mỗi dự đoán dựa trên nhãn của k láng giềng gần nhất, trong đó weights='distance' giảm ảnh hưởng của điểm xa. Do dựa trên khoảng cách, mô hình nhạy với thang đo nên cần chuẩn hóa trước khi huấn luyện. Ưu điểm là dễ hiểu và không cần quá trình huấn luyện phức tạp, nhưng kém hiệu quả khi dữ liệu lớn vì phải so sánh toàn bộ mẫu trong dự đoán.",
  "page_29_content_5": "Random Forest (RF): RF được chọn vì tính ổn định cao và khả năng xử lý tốt dữ liệu không chuẩn hóa. Mô hình kết hợp nhiều cây quyết định (bagging) để giảm overfitting và tăng độ chính xác. Tham số quan trọng gồm số lượng cây (n_estimators), độ sâu (max_depth) và số đặc trưng chia tại mỗi node (max_features). Ngoài độ chính xác, RF còn cung cấp feature importance để giải thích mức độ đóng góp của SSIM, OCR hay ORB. Tuy nhiên, ranh giới phân loại của RF thường ít mượt mà hơn so với boosting.",
  "page_29_content_6": "XGBoost (Extreme Gradient Boosting): XGBoost được lựa chọn vì khả năng đạt hiệu năng cao nhất trong nhiều bài toán phân loại nhờ cơ chế boosting. Mỗi cây mới học từ sai số của cây trước, cùng với regularization L1/L2 để tránh overfitting. Các tham số như learning_rate, n_estimators, max_depth,",
  "page_29_page_number": 29,
  "page_30_content_1": "subsample và colsample_bytree giúp điều chỉnh linh hoạt giữa bias và variance. XGBoost hỗ trợ đa luồng, tối ưu tốc độ, đồng thời cung cấp importance và SHAP để giải thích mô hình. Nhược điểm là cần tuning nhiều tham số và huấn luyện lâu hơn RF.",
  "page_30_heading_1": "3.3. Thiết kế hệ thống",
  "page_30_heading_2": "3.3.1. Kiến trúc hệ thống",
  "page_30_figure_1_caption": "Hình 3-1. Kiến trúc hệ thống",
  "page_30_content_2": "Hệ thống bắt đầu từ các cặp Input, được chuyển vào Loader & Group để liệt kê các trường hợp và nhóm theo group_ids. Sau đó dữ liệu được đưa qua bước Preprocessing gồm chuyển sang ảnh xám, thay đổi kích thước và giảm nhiễu. Tiếp theo, 5 đặc trưng được tính toán song song, sau đó hợp nhất lại thành 1 vector 5 chiều. Quá trình huấn luyện và đánh giá sử dụng GroupKFold, chia dữ liệu thành nhiều fold dựa trên nhóm. Với mỗi fold, mô hình được huấn luyện trên tập train, sau đó dự đoán trên tập test và ghi lại output cùng các chỉ số đánh giá. Từ kết quả từng fold, hệ thống gom thống kê và tiến hành đánh giá tổng hợp, bao gồm trung bình và độ lệch chuẩn, ma trận nhầm lẫn và tầm quan trọng của từng đặc trưng. Cuối cùng dựa trên kết quả tổng hợp này, em sẽ đưa ra quyết định mô hình và thực hiện các điều chỉnh cần thiết.",
  "page_30_page_number": 30,
  "page_31_heading_1": "3.3.2. Các thành phần của hệ thống",
  "page_31_content_1": "- Input: Cặp (original.png, variant.png). Mỗi original_x có nhiều biến thể với mục tiêu là so sánh một – một theo cặp.",
  "page_31_content_2": "- Loader & Group: Đọc thư mục original_image và variant_image/original_x. Sau đó tạo danh sách theo đường dẫn dựa vào tên thư mục (path_original, path_variant, label). Cuối cùng là gán group_id = số x để dùng GroupKFold.",
  "page_31_content_3": "- Preprocessing: Đọc grayscale. Downscale nếu tổng pixel vượt ngưỡng 700k, medianBlur(3) giảm nhiễu nhẹ.",
  "page_31_content_4": "- Feature Extraction: Mỗi đặc trưng chuẩn hóa về thang [0,1] để dễ học:",
  "page_31_content_5": "+ SSIM: Đánh giá cấu trúc và độ tương đồng cường độ sau đó đưa đầu ra gần bằng [0,1]",
  "page_31_content_6": "+ Histogram: So sánh phân bố màu (3 kênh, 32 bins) và dùng hệ số tương quan CORREL rồi map (corr+1)/2.",
  "page_31_content_7": "+ Layout: Canny edges để có thể IoU giữa hai mặt nạ cạnh và phản ánh thay đổi bố cục lớn",
  "page_31_content_8": "+ OCR: Ảnh được chuyển grayscale, áp dụng adaptive threshold rồi đưa vào Tesseract để trích xuất văn bản. Kết quả được làm sạch và tách thành token, sau đó so sánh bằng Jaccard giữa hai tập từ",
  "page_31_content_9": "+ ORB Keypoints: Phát hiện và mô tả điểm đặc trưng, lọc Lowe ratio, tính score = trung bình giữa mật độ match tương đối và chất lượng (1 - mean(distance)/256)",
  "page_31_content_10": "- 5D Vector: Ghép các đặc trưng SSIM, OCR, Hist, ORB, Layout để tiến hành quá trình huấn luyện và kiểm tra",
  "page_31_content_11": "- Models:",
  "page_31_content_12": "+ SVM: Đầu vào được chuẩn hóa bằng StandardScaler để đưa các đặc trưng về cùng thang đo, giúp khoảng cách trong không gian đặc trưng không bị lệch. Mô hình SVC sử dụng kernel RBF (Radial Basis Function), cho phép ánh xạ phi tuyến các đặc trưng đầu vào sang không gian chiều cao hơn để phân tách tốt hơn các lớp khó phân biệt tuyến tính. Tham số C=10.0 điều chỉnh mức phạt cho",
  "page_31_page_number": 31,
  "page_32_content_1": "các điểm phân loại sai, cân bằng giữa độ khái quát và độ chính xác. Tham số gamma='scale' tự động tính toán mức ảnh hưởng của một điểm huấn luyện trong không gian kernel, đảm bảo sự ổn định. Random state được cố định để kết quả tái lập",
  "page_32_content_2": "+ kNN: Do đặc trưng đầu vào có thang đo khác nhau, dữ liệu được chuẩn hóa bằng StandardScaler để tránh việc một đặc trưng (như SSIM) lấn át các đặc trưng khác. Mô hình KNeighborsClassifier sử dụng 11 láng giềng gần nhất (n_neighbors=11) và gán trọng số theo khoảng cách (weights='distance'), nghĩa là các điểm gần sẽ ảnh hưởng mạnh hơn đến dự đoán. Khoảng cách được đo bằng Manhattan (L1) (metric='manhattan'), phù hợp khi dữ liệu đa chiều và có sự phân tán khác nhau giữa các đặc trưng. Việc tính toán khoảng cách được thực hiện bằng phương pháp vét cạn (algorithm='brute'), đảm bảo chính xác tuyệt đối dù chi phí tính toán cao hơn.",
  "page_32_content_3": "+ Random Forest: Mô hình gồm 140 cây (n_estimators=140), mỗi cây có độ sâu tối đa giới hạn ở 10 (max_depth=10) để tránh overfitting. Số đặc trưng được xem xét tại mỗi lần chia là căn bậc hai của tổng số đặc trưng (max_features='sqrt'), giúp tăng tính ngẫu nhiên và giảm tương quan giữa các cây. Các tham số min_samples_split=6 và min_samples_leaf=2 đảm bảo node không bị chia quá nhỏ, từ đó tăng tính tổng quát. Mô hình không yêu cầu chuẩn hóa dữ liệu và có thể cung cấp feature importance để phân tích mức đóng góp tương đối của từng đặc trưng.",
  "page_32_content_4": "+ XGBoost: Mô hình sử dụng XGBClassifier để khai thác các quan hệ phi tuyến giữa đặc trưng. Số lượng cây được đặt là 70 (n_estimators=70) với độ sâu tối đa 3 (max_depth=3) giúp hạn chế overfitting. Tham số learning_rate=0.05 điều chỉnh mức đóng góp của từng cây mới, cân bằng giữa tốc độ hội tụ và khả năng khái quát. Các tham số subsample=0.8 và colsample_bytree=1.0 lần lượt kiểm soát tỷ lệ mẫu và tỷ lệ đặc trưng được sử dụng cho mỗi cây, đóng vai trò như regularization ngẫu nhiên. Bên cạnh đó, reg_alpha=0.0 (L1) và reg_lambda=1.0 (L2) tăng cường ràng buộc, giúp giảm overfitting và ổn định mô hình.",
  "page_32_content_5": "- Output: nhãn dự đoán similar / almost / different",
  "page_32_page_number": 32,
  "page_33_content_1": "- Evaluation:",
  "page_33_content_2": "+ GroupKFold (k=5) với mỗi original_x chỉ nằm trong 1 fold test để loại bỏ leakage",
  "page_33_content_3": "+ Thu thập các giá trị mean accuracy ± std và confusion matrix, tầm quan trọng của từng feature với mục đích so sánh độ ổn định. Sau đó có thể đưa ra quyết định có cần cải tiến mô hình nữa hay không.",
  "page_33_heading_1": "3.3.3. Luồng hoạt động của hệ thống",
  "page_33_figure_2_caption": "Hình 3-2. Sơ đồ luồng hoạt động của hệ thống",
  "page_33_content_4": "Đối với so sánh ảnh trực tiếp, luồng này giao diện cho phép người dùng tải lên hai ảnh – một ảnh gốc và một ảnh cần kiểm thử. Người dùng có thể thêm hoặc xóa ảnh và nhấn nút So sánh để bắt đầu quá trình. Hệ thống tiến hành trích xuất năm loại đặc trưng gồm SSIM (đo mức độ tương đồng cấu trúc), OCR (so sánh từ khóa văn bản), Histogram (tương quan màu sắc đã chuẩn hóa), ORB (đặc trưng cục bộ) và Layout (IoU biên cạnh). Các đặc trưng được đưa vào mô hình học máy để dự đoán mức độ",
  "page_33_page_number": 33
}

json
{
  "text_0_0": "tương đồng giữa hai ảnh. Kết quả cuối cùng được hiển thị dưới ba trạng thái: Không vi phạm (Similar), Cận kiểm chứng (Almost) hoặc Vi phạm (Different).",
  "text_0_1": "Đối với kiểm thử web tự động, luồng này người dùng tải lên một ảnh gốc và nhập danh sách các chi nhánh, mỗi chi nhánh bao gồm tên, URL và CSS Selector của phần tử quảng cáo cần kiểm tra. Giao diện cho phép thêm hoặc xóa chi nhánh trước khi nhấn Chạy tất cả test để bắt đầu. Hệ thống sử dụng Selenium để truy cập từng trang web, tải ảnh theo selector và so sánh với ảnh gốc bằng pipeline đặc trưng và mô hình học máy. Kết quả được hiển thị dưới dạng lưới, trong đó mỗi ô tương ứng với một chi nhánh và trạng thái kiểm thử: Không vi phạm, Cận kiểm chứng hoặc Vi phạm. Người dùng có thể nhấp vào từng chi nhánh để mở modal chi tiết, xem trực quan ảnh gốc và ảnh crawl để đối chiếu.",
  "section_title_0_2": "3.4. Các giai đoạn phát triển hệ thống",
  "section_title_0_3": "3.4.1. Giai đoạn 1",
  "section_title_0_4": "3.4.1.1. Mục tiêu và bối cảnh",
  "text_0_5": "Giai đoạn khởi đầu nhằm xây dựng baseline ổn định đó là khai thác đồng thời ba đặc trưng toàn cục SSIM (cấu trúc), Histogram (màu) và Layout (cạnh) để phát hiện sự khác biệt lớn giữa các ảnh, vẫn giữ ảnh xạ nhãn ở mức 2 lớp similar/different. Mục tiêu chính là kiểm chứng pipeline trích xuất đặc trưng đa chiều, đánh giá hiệu quả phân loại bước đầu và xác lập nên so sánh cho các cải tiến tiếp theo.",
  "section_title_0_6": "3.4.1.2. Dữ liệu và đánh giá",
  "text_0_7": "Bản chất tổ chức dữ liệu (cặp original_x và nhiều biến thể) và cơ chế gán group mỗi cặp (original, variant, nhãn) được gán group_id theo ảnh gốc, tránh rò rỉ dữ liệu khi chia tập nên GroupKFold đóng vai trò then chốt trong đánh giá. Các thước đo gồm độ chính xác tổng, cấu trúc nhầm lẫn hai chiều và quan sát định tính các mẫu biên. Các giá trị số được đời sang phần kết quả, ở đây nhấn mạnh phương pháp luận nhất quán nhằm bảo đảm tính so sánh.",
  "page_number_0": "34",
  "section_title_1_0": "3.4.1.3. Quy trình kỹ thuật",
  "image_caption_1_1": "Hình 3-3. Pipeline tiền xử lý và đặc trưng cơ bản",
  "text_1_2": "Chuỗi tiền xử lý ảnh xám, tiếp tục thu nhỏ đăng tỷ lệ theo ngưỡng pixel và median blur nhẹ. Đặc trưng SSIM được giữ làm trục nền, Histogram được tính trên ảnh màu gốc bằng phân phối kênh trong số bin cố định rồi chuẩn hóa để loại bỏ ảnh hưởng độ sáng tuyệt đối, sau đó chuyển hệ số tương quan về miền [0,1] và Layout được suy ra qua phát hiện biên Canny trên hai ảnh xám đã xử lý và tính IoU giữa mặt nạ biên nhằm đo mức chồng lấp cấu trúc hình dạng. Bộ phân loại tiếp tục là SVM tuyến tính với cân bằng lớp để đảm bảo thay đổi hiệu năng đến từ chiều đặc trưng mới chứ không phải thay đổi thuật toán; chưa áp dụng tinh chỉnh mở rộng vì mục tiêu vẫn là đánh giá đóng góp đặc trưng.",
  "section_title_1_3": "3.4.1.4. Hạn chế và ý tưởng cải tiến",
  "text_1_4": "Mặc dù bắt đầu với ba đặc trưng giúp giảm đáng kể các trường hợp đổi tông màu hoặc dịch chuyển bố cục lớn bị xem là similar, những lỗi liên quan đến sửa chữ nhỏ, thay con số hoặc chỉnh chi tiết biểu tượng vẫn tồn tại vì hệ thống chưa có khả năng đọc văn bản hay định vị thay đổi cục bộ tinh vi. Đồng thời việc chỉ có hai lớp khiến một mảng biên thế trung gian bị dồn vào different tạo ra nhiễu cho quy trình nghiệp vụ vốn cần ưu tiên những sai lệch mạnh hơn. Điều này chỉ ra hai khoảng trống là thiếu thông tin ngữ nghĩa chữ và thiếu cặp phân loại trung gian để giảm nhầm lẫn hai cực. Quyết định cho giai đoạn kế tiếp là bổ sung OCR nhằm trích nội dung văn bản và mở rộng không gian nhãn thêm lớp almost, với giả thuyết rằng lớp chuyển tiếp sẽ giảm trao đổi sai giữa similar và different, đồng thời kênh văn bản giúp bắt các thay đổi mà SSIM, Histogram và Layout cùng bỏ sót.",
  "page_number_1": "35",
  "section_title_2_0": "3.4.2. Giai đoạn 2",
  "section_title_2_1": "3.4.2.1. Mục tiêu và bối cảnh",
  "text_2_2": "Sau khi đã kiểm soát tốt các thay đổi về màu sắc và bố cục tổng thể, nhu cầu tiếp theo là phát hiện chính xác các chỉnh sửa nội dung chữ như giá, khuyến mãi hay câu slogan và tránh việc đẩy mọi sai lệch vừa phải vào nhóm different, gây quá tải kiểm thử thủ công. Để làm được điều này, không gian nhãn được mở rộng từ hai lên ba lớp bằng cách thêm almost làm tăng đệm ngữ nghĩa cho mức sai lệch chấp nhận được, đồng thời tích hợp đặc trưng OCR để mô hình nắm thông tin trực tiếp về mức tương đồng văn bản giữa hai ảnh. Bên cạnh đó, với trục cấu trúc (SSIM, Layout) và màu (Histogram) đã được khai thác, khả năng phát hiện các chỉnh sửa cục bộ tinh vi như thêm/xóa icon, dịch chuyển logo nhỏ hay thay nút hành động được bổ sung nhờ đặc trưng ORB, hoàn thiện vector năm chiều. Sự kết hợp này giúp tăng độ nhạy với các thay đổi vi mô và cải thiện khả năng phân tách giữa almost và different tại những ranh giới trước đó còn mềm.",
  "section_title_2_3": "3.4.2.2. Dữ liệu và đánh giá",
  "text_2_4": "Cấu trúc thư mục vẫn được giữ nguyên, nhưng ảnh xạ nhãn được cập nhật: các biến thể liên quan đến thay đổi cục bộ nhẹ, biến đổi văn bản hoặc layout mức nhỏ được gom vào lớp almost thay vì ép vào similar hay different. GroupKFold tiếp tục đảm bảo mỗi original_x chỉ xuất hiện một lần trong tập kiểm tra ở mỗi vòng, tăng độ tin cậy khi thêm lớp mới vốn dễ làm tăng phương sai đánh giá nếu phân bổ folds không đồng đều. Việc đo lường vẫn dựa trên độ chính xác tổng và ma trận nhầm lẫn, nhưng diễn giải tập trung hơn vào hai cặp nhầm lẫn then chốt similar với almost và almost với different vì chúng đại diện cho các ranh giới cận tối ưu. Phân bổ kỳ vọng giữa ba lớp được theo dõi qua biểu đồ để xác nhận không có lệch quá mạnh, đảm bảo kết quả cross-validation vẫn đáng tin cậy. Sự quan sát ma trận nhầm lẫn tập trung vào hai cải thiện mong đợi: tăng khả năng bắt đúng different khi thay đổi cục bộ nhỏ và hạn chế việc hoán đổi giữa similar và almost. Nhìn chung, phương pháp đánh giá được duy trì nhất quán, cho phép so sánh xuyên giai đoạn trong khi thêm chiều đặc trưng mới, còn các số liệu chi tiết được trình bày ở phần kết quả.",
  "page_number_2": "36",
  "section_title_3_0": "3.4.2.3. Quy trình kỹ thuật",
  "image_caption_3_1": "Hình 3-4. Pipeline mở rộng với OCR và ORB",
  "text_3_2": "Pipeline kế thừa toàn bộ bước tiền xử lý ảnh xám, tính SSIM, Histogram và Layout từ giai đoạn trước, đồng thời mở rộng vector đặc trưng bằng hai thành phần mới. Trước hết, OCR được áp dụng: mỗi ảnh xám sau median blur được nhị phân hóa thích nghi để tăng tương phản ký tự, đưa qua OCR trích chuỗi, làm sạch và đánh giá mức tương đồng bằng cách kết hợp các độ đo chuỗi và tập từ, nhằm cân bằng độ nhạy theo thứ tự và phổ từ vựng; kết quả được nén về một điểm ổn định, tránh cực trị khi thiếu văn bản. Sau đó, ORB được tính trên ảnh xám đã chuẩn hóa bằng cách phát hiện tập điểm đặc trưng với số lượng tối ưu, trích descriptor nhị phân, so khớp KNN với ngưỡng ratio để loại bỏ match kém, và tổng hợp mật độ match cùng chất lượng trung bình thành một điểm chuẩn hóa, với fallback trung tính khi không đủ descriptor hợp lệ. Vector đặc trưng năm chiều (SSIM, Histogram, Layout, OCR, ORB) được chuẩn hóa đồng nhất (nếu mô hình yêu cầu) trước khi huấn luyện SVM, sử dụng kernel tuyến tính hoặc RBF nhẹ nếu có tương tác phi tuyến giữa các đặc trưng, đồng thời hạn chế tuning sâu để bảo toàn khả năng quy kết cải tiến cho các đặc trưng mới. Việc thêm lớp almost giúp mô hình học ranh giới mềm giữa tương đồng hoàn toàn và khác biệt rõ, tạo tiền đề cho đánh giá chi tiết hơn ở các giai đoạn tiếp theo.",
  "section_title_3_3": "3.4.2.4. Hạn chế và ý tưởng cải tiến",
  "text_3_4": "Mặc dù việc bổ sung OCR và lớp almost giảm đáng kể nhầm lẫn trực tiếp giữa similar và different, vẫn tồn tại các trường hợp thay đổi rất nhỏ về biểu tượng, logo hoặc chi tiết đồ họa cục bộ mà Histogram, Layout hay OCR khó phát hiện, khiến mô hình đôi khi giữ chúng ở similar hoặc almost thay vì cảnh báo. Nguyên nhân là thiếu đặc trưng nhạy với cấu trúc vi mô và quan hệ keypoint giữa hai",
  "page_number_3": "37",
  "text_4_0": "ảnh, trong khi các đặc trưng hiện tại thiên về thống kê toàn cục. Do đó, ORB được tích hợp để khai thác mô tả keypoint và phép so khớp cục bộ, với kỳ vọng tăng recall của lớp different cho các thay đổi nhỏ nhưng quan trọng mà các chiều toàn cục và nội dung chưa nắm bắt. Sau khi tích hợp ORB, phần lớn lỗi bỏ sót thay đổi cục bộ giảm rõ, nhưng trọng tâm chuyển sang tối ưu lựa chọn mô hình theo tiêu chí ổn định giữa các folds, khả năng giải thích và chi phí suy luận. SVM cho kết quả nhất quán nhưng vẫn có dao động ở một số nhóm và không cung cấp trực tiếp độ quan trọng tương đối của từng đặc trưng như mô hình cây, hay mức nhạy khoảng cách như KNN. Vì vậy, vector năm chiều được giữ nguyên và bước tiếp theo là so sánh đa mô hình (SVM, KNN, Random Forest, XGBoost) để chọn ứng viên triển khai cuối cùng dựa trên sự cân bằng giữa mean performance, độ lệch chuẩn, khả năng giải thích và tốc độ dự đoán.",
  "section_title_4_1": "3.4.3. Giai đoạn 3",
  "section_title_4_2": "3.4.3.1. Mục tiêu và bối cảnh",
  "text_4_3": "Với không gian đặc trưng đã được củng cố đủ chiều toàn cục và cục bộ, nhu cầu cuối cùng là đánh giá khách quan các thuật toán phân loại khác nhau trên cùng một vector nhằm xác định mô hình triển khai tối ưu và kiểm chứng rằng hiệu năng thu được không phải sản phẩm ngẫu nhiên của một kiến trúc đơn lẻ. Giai đoạn này tiến hành huấn luyện và đánh giá song song các mô hình đại diện cho nhiều họ: SVM (margin-based), KNN (phi tham số đo khoảng cách), Random Forest (tập hợp cây bagging) và XGBoost (boosting tuần tự).",
  "section_title_4_4": "3.4.3.2. Dữ liệu và đánh giá",
  "text_4_5": "Tập dữ liệu và ánh xạ ba lớp giữ nguyên hoàn toàn so với giai đoạn ngay trước, đảm bảo mọi khác biệt hiệu năng phản ánh thuần túy lựa chọn thuật toán. GroupKFold tiếp tục là khung đánh giá duy nhất để loại trừ leakage và cho phép so sánh độ ổn định bằng cách đối chiếu độ dao động giữa các folds cho từng mô hình. Các thước đo sẽ gồm độ chính xác trung bình, ma trận nhầm lẫn gộp và (đối với mô hình cây / boosting) phân tích tầm quan trọng đặc trưng, KNN bổ sung góc nhìn về sự phân tách tự nhiên của không gian vì nó không học tham số toàn cục. Các trị số cụ thể được dành cho phần kết quả, ở đây chỉ mô tả thiết kế thử nghiệm đồng nhất giữa các thuật toán để đảm bảo tính công bằng.",
  "page_number_4": "38"
}

json
{
  "page_49_text": "Lớp “almost” cũng đạt cân bằng hơn RF và SVM với precision ~86.2%, recall ~83.3%. Nhầm lẫn trực tiếp giữa “similar” và “different” rất hiếm (2–3 mẫu), xác nhận vai trò “đệm” hiệu quả của lớp almost. Nhìn chung, XGBoost không chỉ đạt độ chính xác cao nhất mà còn duy trì cân bằng tốt nhất giữa ba lớp, thể hiện rõ ưu thế so với các mô hình còn lại.",
  "page_49_number": 49,
  "page_50_chapter_title": "Chương 4. KẾT LUẬN VÀ HƯỚNG PHÁT TRIỂN",
  "page_50_section_4_1_title": "4.1. Kết luận",
  "page_50_section_4_1_item_1": "=> đạt được kết quả",
  "page_50_section_4_1_item_2": "=> giải quyết gì",
  "page_50_section_4_1_item_3": "=> ưu và khuyết điểm",
  "page_50_section_4_2_title": "4.2. Hướng phát triển",
  "page_50_section_4_2_item_1": "=> vấn đề gì, phương pháp => business, giải pháp, kiến trúc...",
  "page_50_number": 50,
  "page_51_title": "TÀI LIỆU THAM KHẢO",
  "page_51_subtitle": "(Theo chuẩn IEEE – bỏ dòng này khi viết báo cáo)",
  "page_51_reference_1": "https://www.researchgate.net/publication/394449177_Challenges_in_GUI_Test_Automation_for_Dynamic_Web_Applications_A_Systematic_Review",
  "page_51_reference_2": "https://www.researchgate.net/publication/369365215_Image_quality_assessment_based_on_the_perceived_structural_similarity_index_of_an_image",
  "page_51_reference_3": "https://www.researchgate.net/publication/391528309_Enhancing_Bounding_Box_Regression_for_Object_Detection_Dimensional_Angle_Precision_IoU-Loss",
  "page_51_reference_4": "https://www.researchgate.net/publication/383459245_Image_Retrieval_Using_Multilayer_Feature_Aggregation_Histogram",
  "page_51_reference_5": "https://www.researchgate.net/publication/368189389_A_Comparative_Analysis_of_SIFT_SURF_and_ORB_on_Sketch_and_Paint_based_images",
  "page_51_reference_6": "https://www.researchgate.net/publication/373513855_Advancements_in_OCR_A_Deep_Learning_Algorithm_for_Enhanced_Text_Recognition",
  "page_51_reference_7": "https://www.researchgate.net/publication/381131594_Scikit-ANFIS_A_Scikit-Learn_Compatible_Python_Implementation_for_Adaptive_Neuro-Fuzzy_Inference_System",
  "page_51_reference_8": "https://www.researchgate.net/publication/394048129_Comparative_Performance_Analysis_of_Decision_Tree_And_SVM_Algorithms_in_Detecting_Multiple_System_Atrophy_Based_on_Clinical_Features",
  "page_51_reference_9": "https://www.researchgate.net/publication/372479561_A_Scalable_Tree_Boosting_System_XG_Boost",
  "page_51_number": 51,
  "page_52_title": "PHỤ LỤC TEST CASE",
  "page_52_table_header_stt": "STT",
  "page_52_table_header_original_image": "Ảnh gốc",
  "page_52_table_header_variant_image": "Ảnh biến thể",
  "page_52_table_header_actual_result": "Kết quả thực tế",
  "page_52_table_header_expected_result": "Kết quả mong muốn",
  "page_52_table_header_result": "Kết quả",
  "test_case_1_stt": 1,
  "test_case_1_variant": "font_color",
  "test_case_1_actual_result": "Không vi phạm",
  "test_case_1_expected_result": "Không vi phạm",
  "test_case_1_result": "Pass",
  "test_case_2_stt": 2,
  "test_case_2_variant": "layout",
  "test_case_2_actual_result": "Cần kiểm chứng",
  "test_case_2_expected_result": "Cần kiểm chứng",
  "test_case_2_result": "Pass",
  "test_case_3_stt": 3,
  "test_case_3_variant": "text",
  "test_case_3_actual_result": "Cần kiểm chứng",
  "test_case_3_expected_result": "Cần kiểm chứng",
  "test_case_3_result": "Pass",
  "test_case_4_stt": 4,
  "test_case_4_variant": "changes",
  "test_case_4_actual_result": "Vi phạm",
  "test_case_4_expected_result": "Vi phạm",
  "test_case_4_result": "Pass",
  "test_case_5_stt": 5,
  "test_case_5_variant": "font_color",
  "test_case_5_actual_result": "Không vi phạm",
  "test_case_5_expected_result": "Không vi phạm",
  "test_case_5_result": "Pass",
  "test_case_6_stt": 6,
  "test_case_6_variant": "layout",
  "test_case_6_actual_result": "Vi phạm",
  "test_case_6_expected_result": "Cần kiểm chứng",
  "test_case_6_result": "Fail",
  "page_52_number": 52,
  "test_case_7_stt": 7,
  "test_case_7_variant": "text",
  "test_case_7_actual_result": "Cần kiểm chứng",
  "test_case_7_expected_result": "Cần kiểm chứng",
  "test_case_7_result": "Pass",
  "test_case_8_stt": 8,
  "test_case_8_variant": "changes",
  "test_case_8_actual_result": "Vi phạm",
  "test_case_8_expected_result": "Vi phạm",
  "test_case_8_result": "Pass",
  "test_case_9_stt": 9,
  "test_case_9_variant": "font_color",
  "test_case_9_actual_result": "Cần kiểm chứng",
  "test_case_9_expected_result": "Không vi phạm",
  "test_case_9_result": "Fail",
  "test_case_10_stt": 10,
  "test_case_10_variant": "layout",
  "test_case_10_actual_result": "Không vi phạm",
  "test_case_10_expected_result": "Cần kiểm chứng",
  "test_case_10_result": "Fail",
  "test_case_11_stt": 11,
  "test_case_11_variant": "text",
  "test_case_11_actual_result": "Cần kiểm chứng",
  "test_case_11_expected_result": "Cần kiểm chứng",
  "test_case_11_result": "Pass",
  "test_case_12_stt": 12,
  "test_case_12_variant": "changes",
  "test_case_12_actual_result": "Vi phạm",
  "test_case_12_expected_result": "Vi phạm",
  "test_case_12_result": "Pass",
  "page_53_number": 53
}

json
{
  "page_number_1": 54,
  "row_13_change_type": "font_color",
  "row_13_evaluation_1": "Không vi phạm",
  "row_13_evaluation_2": "Không vi phạm",
  "row_13_result": "Pass",
  "row_14_change_type": "layout",
  "row_14_evaluation_1": "Cần kiểm chứng",
  "row_14_evaluation_2": "Cần kiểm chứng",
  "row_14_result": "Pass",
  "row_15_change_type": "text",
  "row_15_evaluation_1": "Cần kiểm chứng",
  "row_15_evaluation_2": "Cần kiểm chứng",
  "row_15_result": "Pass",
  "row_16_change_type": "changes",
  "row_16_evaluation_1": "Không vi phạm",
  "row_16_evaluation_2": "Vi phạm",
  "row_16_result": "Fail",
  "row_17_change_type": "font_color",
  "row_17_evaluation_1": "Không vi phạm",
  "row_17_evaluation_2": "Không vi phạm",
  "row_17_result": "Pass",
  "row_18_change_type": "layout",
  "row_18_evaluation_1": "Vi phạm",
  "row_18_evaluation_2": "Cần kiểm chứng",
  "row_18_result": "Fail",
  "row_19_change_type": "text",
  "row_19_evaluation_1": "Không vi phạm",
  "row_19_evaluation_2": "Cần kiểm chứng",
  "row_19_result": "Fail",
  "page_number_2": 55,
  "row_20_change_type": "changes",
  "row_20_evaluation_1": "Vi phạm",
  "row_20_evaluation_2": "Vi phạm",
  "row_20_result": "Pass",
  "row_21_change_type": "font_color",
  "row_21_evaluation_1": "Không vi phạm",
  "row_21_evaluation_2": "Không vi phạm",
  "row_21_result": "Pass",
  "row_22_change_type": "layout",
  "row_22_evaluation_1": "Vi phạm",
  "row_22_evaluation_2": "Cần kiểm chứng",
  "row_22_result": "Fail",
  "row_23_change_type": "text",
  "row_23_evaluation_1": "Cần kiểm chứng",
  "row_23_evaluation_2": "Cần kiểm chứng",
  "row_23_result": "Pass",
  "row_24_change_type": "changes",
  "row_24_evaluation_1": "Vi phạm",
  "row_24_evaluation_2": "Vi phạm",
  "row_24_result": "Pass",
  "row_25_change_type": "font_color",
  "row_25_evaluation_1": "Không vi phạm",
  "row_25_evaluation_2": "Không vi phạm",
  "row_25_result": "Pass",
  "row_26_change_type": "layout",
  "row_26_evaluation_1": "Cần kiểm chứng",
  "row_26_evaluation_2": "Cần kiểm chứng",
  "row_26_result": "Pass",
  "row_27_change_type": "text",
  "row_27_evaluation_1": "Cần kiểm chứng",
  "row_27_evaluation_2": "Cần kiểm chứng",
  "row_27_result": "Pass",
  "page_number_3": 56,
  "row_28_change_type": "changes",
  "row_28_evaluation_1": "Vi phạm",
  "row_28_evaluation_2": "Vi phạm",
  "row_28_result": "Pass",
  "row_29_change_type": "font_color",
  "row_29_evaluation_1": "Không vi phạm",
  "row_29_evaluation_2": "Không vi phạm",
  "row_29_result": "Pass",
  "row_30_change_type": "layout",
  "row_30_evaluation_1": "Cần kiểm chứng",
  "row_30_evaluation_2": "Cần kiểm chứng",
  "row_30_result": "Pass",
  "row_31_change_type": "text",
  "row_31_evaluation_1": "Cần kiểm chứng",
  "row_31_evaluation_2": "Cần kiểm chứng",
  "row_31_result": "Pass",
  "row_32_change_type": "changes",
  "row_32_evaluation_1": "Vi phạm",
  "row_32_evaluation_2": "Vi phạm",
  "row_32_result": "Pass",
  "row_33_change_type": "font_color",
  "row_33_evaluation_1": "Không vi phạm",
  "row_33_evaluation_2": "Không vi phạm",
  "row_33_result": "Pass",
  "row_34_change_type": "layout",
  "row_34_evaluation_1": "Cần kiểm chứng",
  "row_34_evaluation_2": "Cần kiểm chứng",
  "row_34_result": "Pass",
  "page_number_4": 57,
  "row_35_change_type": "text",
  "row_35_evaluation_1": "Cần kiểm chứng",
  "row_35_evaluation_2": "Cần kiểm chứng",
  "row_35_result": "Pass",
  "row_36_change_type": "changes",
  "row_36_evaluation_1": "Vi phạm",
  "row_36_evaluation_2": "Vi phạm",
  "row_36_result": "Pass",
  "row_37_change_type": "font_color",
  "row_37_evaluation_1": "Không vi phạm",
  "row_37_evaluation_2": "Không vi phạm",
  "row_37_result": "Pass",
  "row_38_change_type": "layout",
  "row_38_evaluation_1": "Cần kiểm chứng",
  "row_38_evaluation_2": "Cần kiểm chứng",
  "row_38_result": "Pass",
  "row_39_change_type": "text",
  "row_39_evaluation_1": "Cần kiểm chứng",
  "row_39_evaluation_2": "Cần kiểm chứng",
  "row_39_result": "Pass",
  "row_40_change_type": "changes",
  "row_40_evaluation_1": "Vi phạm",
  "row_40_evaluation_2": "Vi phạm",
  "row_40_result": "Pass",
  "page_number_5": 58,
  "row_41_change_type": "font_color",
  "row_41_evaluation_1": "Không vi phạm",
  "row_41_evaluation_2": "Không vi phạm",
  "row_41_result": "Pass",
  "row_42_change_type": "layout",
  "row_42_evaluation_1": "Cần kiểm chứng",
  "row_42_evaluation_2": "Cần kiểm chứng",
  "row_42_result": "Pass",
  "row_43_change_type": "text",
  "row_43_evaluation_1": "Cần kiểm chứng",
  "row_43_evaluation_2": "Cần kiểm chứng",
  "row_43_result": "Pass",
  "row_44_change_type": "changes",
  "row_44_evaluation_1": "Vi phạm",
  "row_44_evaluation_2": "Vi phạm",
  "row_44_result": "Pass",
  "row_45_change_type": "font_color",
  "row_45_evaluation_1": "Không vi phạm",
  "row_45_evaluation_2": "Không vi phạm",
  "row_45_result": "Pass",
  "row_46_change_type": "layout",
  "row_46_evaluation_1": "Cần kiểm chứng",
  "row_46_evaluation_2": "Cần kiểm chứng",
  "row_46_result": "Pass",
  "row_47_change_type": "text",
  "row_47_evaluation_1": "Cần kiểm chứng",
  "row_47_evaluation_2": "Cần kiểm chứng",
  "row_47_result": "Pass",
  "row_48_change_type": "changes",
  "row_48_evaluation_1": "Vi phạm",
  "row_48_evaluation_2": "Vi phạm",
  "row_48_result": "Pass"
}

json
{
  "page_number_1": 59,
  "row_49_id": 49,
  "row_49_modification_type": "font_color",
  "row_49_evaluation_1": "Không vi phạm",
  "row_49_evaluation_2": "Không vi phạm",
  "row_49_result": "Pass",
  "row_50_id": 50,
  "row_50_modification_type": "layout",
  "row_50_evaluation_1": "Cần kiểm chứng",
  "row_50_evaluation_2": "Cần kiểm chứng",
  "row_50_result": "Pass",
  "row_51_id": 51,
  "row_51_modification_type": "text",
  "row_51_evaluation_1": "Cần kiểm chứng",
  "row_51_evaluation_2": "Cần kiểm chứng",
  "row_51_result": "Pass",
  "row_52_id": 52,
  "row_52_modification_type": "changes",
  "row_52_evaluation_1": "Vi phạm",
  "row_52_evaluation_2": "Vi phạm",
  "row_52_result": "Pass",
  "row_53_id": 53,
  "row_53_modification_type": "font_color",
  "row_53_evaluation_1": "Không vi phạm",
  "row_53_evaluation_2": "Không vi phạm",
  "row_53_result": "Pass",
  "row_54_id": 54,
  "row_54_modification_type": "layout",
  "row_54_evaluation_1": "Vi phạm",
  "row_54_evaluation_2": "Cần kiểm chứng",
  "row_54_result": "Fail",
  "row_55_id": 55,
  "row_55_modification_type": "text",
  "row_55_evaluation_1": "Cần kiểm chứng",
  "row_55_evaluation_2": "Cần kiểm chứng",
  "row_55_result": "Pass",
  "row_56_id": 56,
  "row_56_modification_type": "changes",
  "row_56_evaluation_1": "Vi phạm",
  "row_56_evaluation_2": "Vi phạm",
  "row_56_result": "Pass",
  "page_number_2": 60,
  "row_57_id": 57,
  "row_57_modification_type": "font_color",
  "row_57_evaluation_1": "Không vi phạm",
  "row_57_evaluation_2": "Không vi phạm",
  "row_57_result": "Pass",
  "row_58_id": 58,
  "row_58_modification_type": "layout",
  "row_58_evaluation_1": "Cần kiểm chứng",
  "row_58_evaluation_2": "Cần kiểm chứng",
  "row_58_result": "Pass",
  "row_59_id": 59,
  "row_59_modification_type": "text",
  "row_59_evaluation_1": "Cần kiểm chứng",
  "row_59_evaluation_2": "Cần kiểm chứng",
  "row_59_result": "Pass",
  "row_60_id": 60,
  "row_60_modification_type": "changes",
  "row_60_evaluation_1": "Vi phạm",
  "row_60_evaluation_2": "Vi phạm",
  "row_60_result": "Pass",
  "row_61_id": 61,
  "row_61_modification_type": "font_color",
  "row_61_evaluation_1": "Cần kiểm chứng",
  "row_61_evaluation_2": "Không vi phạm",
  "row_61_result": "Fail",
  "row_62_id": 62,
  "row_62_modification_type": "layout",
  "row_62_evaluation_1": "Cần kiểm chứng",
  "row_62_evaluation_2": "Cần kiểm chứng",
  "row_62_result": "Pass",
  "row_63_id": 63,
  "row_63_modification_type": "text",
  "row_63_evaluation_1": "Cần kiểm chứng",
  "row_63_evaluation_2": "Cần kiểm chứng",
  "row_63_result": "Pass",
  "row_64_id": 64,
  "row_64_modification_type": "changes",
  "row_64_evaluation_1": "Vi phạm",
  "row_64_evaluation_2": "Vi phạm",
  "row_64_result": "Pass",
  "page_number_3": 61
}